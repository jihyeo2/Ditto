{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useImageDimensions = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nfunction useImageDimensions(source) {\n  var _a = react_1.useState({\n    loading: true\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  react_1.useEffect(function () {\n    try {\n      if (typeof source === 'number') {\n        var _a = react_native_1.Image.resolveAssetSource(source),\n            width = _a.width,\n            height = _a.height;\n\n        setResult({\n          dimensions: {\n            width: width,\n            height: height,\n            aspectRatio: width / height\n          },\n          loading: false\n        });\n        return;\n      }\n\n      if (typeof source === 'object' && source.uri) {\n        setResult({\n          loading: true\n        });\n        react_native_1.Image.getSize(source.uri, function (width, height) {\n          return setResult({\n            dimensions: {\n              width: width,\n              height: height,\n              aspectRatio: width / height\n            },\n            loading: false\n          });\n        }, function (error) {\n          return setResult({\n            error: error,\n            loading: false\n          });\n        });\n        return;\n      }\n\n      throw new Error('not implemented');\n    } catch (error) {\n      setResult({\n        error: error,\n        loading: false\n      });\n    }\n  }, [source]);\n  return result;\n}\n\nexports.useImageDimensions = useImageDimensions;","map":{"version":3,"sources":["../src/useImageDimensions.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAyBA,SAAgB,kBAAhB,CACE,MADF,EAC+B;AAEvB,MAAA,EAAA,GAAsB,OAAA,CAAA,QAAA,CAAgC;AAAC,IAAA,OAAO,EAAE;AAAV,GAAhC,CAAtB;AAAA,MAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP;AAAA,MAAS,SAAS,GAAA,EAAA,CAAA,CAAA,CAAlB;;AAEN,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,QAAI;AACF,UAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AACxB,YAAA,EAAA,GAAkB,cAAA,CAAA,KAAA,CAAM,kBAAN,CAAyB,MAAzB,CAAlB;AAAA,YAAC,KAAK,GAAA,EAAA,CAAA,KAAN;AAAA,YAAQ,MAAM,GAAA,EAAA,CAAA,MAAd;;AAEN,QAAA,SAAS,CAAC;AACR,UAAA,UAAU,EAAE;AAAC,YAAA,KAAK,EAAA,KAAN;AAAQ,YAAA,MAAM,EAAA,MAAd;AAAgB,YAAA,WAAW,EAAE,KAAK,GAAG;AAArC,WADJ;AAER,UAAA,OAAO,EAAE;AAFD,SAAD,CAAT;AAKA;AACD;;AAED,UAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,MAAM,CAAC,GAAzC,EAA8C;AAC5C,QAAA,SAAS,CAAC;AAAC,UAAA,OAAO,EAAE;AAAV,SAAD,CAAT;AAEA,QAAA,cAAA,CAAA,KAAA,CAAM,OAAN,CACE,MAAM,CAAC,GADT,EAEE,UAAC,KAAD,EAAQ,MAAR,EAAc;AACZ,iBAAA,SAAS,CAAC;AACR,YAAA,UAAU,EAAE;AAAC,cAAA,KAAK,EAAA,KAAN;AAAQ,cAAA,MAAM,EAAA,MAAd;AAAgB,cAAA,WAAW,EAAE,KAAK,GAAG;AAArC,aADJ;AAER,YAAA,OAAO,EAAE;AAFD,WAAD,CAAT;AAGE,SANN,EAOE,UAAC,KAAD,EAAM;AAAK,iBAAA,SAAS,CAAC;AAAC,YAAA,KAAK,EAAA,KAAN;AAAQ,YAAA,OAAO,EAAzB;AAAU,WAAD,CAAT;AAAkC,SAP/C;AAUA;AACD;;AAED,YAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD,KA7BD,CA6BE,OAAO,KAAP,EAAc;AACd,MAAA,SAAS,CAAC;AAAC,QAAA,KAAK,EAAA,KAAN;AAAQ,QAAA,OAAO,EAAE;AAAjB,OAAD,CAAT;AACD;AACF,GAjCD,EAiCG,CAAC,MAAD,CAjCH;AAmCA,SAAO,MAAP;AACD;;AAzCD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageDimensions = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\n/**\n * @param source either a remote URL or a local file resource.\n * @returns original image dimensions (width, height and aspect ratio).\n */\nfunction useImageDimensions(source) {\n    var _a = react_1.useState({ loading: true }), result = _a[0], setResult = _a[1];\n    react_1.useEffect(function () {\n        try {\n            if (typeof source === 'number') {\n                var _a = react_native_1.Image.resolveAssetSource(source), width = _a.width, height = _a.height;\n                setResult({\n                    dimensions: { width: width, height: height, aspectRatio: width / height },\n                    loading: false,\n                });\n                return;\n            }\n            if (typeof source === 'object' && source.uri) {\n                setResult({ loading: true });\n                react_native_1.Image.getSize(source.uri, function (width, height) {\n                    return setResult({\n                        dimensions: { width: width, height: height, aspectRatio: width / height },\n                        loading: false,\n                    });\n                }, function (error) { return setResult({ error: error, loading: false }); });\n                return;\n            }\n            throw new Error('not implemented');\n        }\n        catch (error) {\n            setResult({ error: error, loading: false });\n        }\n    }, [source]);\n    return result;\n}\nexports.useImageDimensions = useImageDimensions;\n//# sourceMappingURL=useImageDimensions.js.map"]},"metadata":{},"sourceType":"script"}