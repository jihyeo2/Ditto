{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensions = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nfunction useDimensions() {\n  var _a = react_1.useState({\n    window: react_native_1.Dimensions.get('window'),\n    screen: react_native_1.Dimensions.get('screen')\n  }),\n      dimensions = _a[0],\n      setDimensions = _a[1];\n\n  var onChange = function onChange(_a) {\n    var window = _a.window,\n        screen = _a.screen;\n    setDimensions({\n      window: window,\n      screen: screen\n    });\n  };\n\n  react_1.useEffect(function () {\n    react_native_1.Dimensions.addEventListener('change', onChange);\n    return function () {\n      return react_native_1.Dimensions.removeEventListener('change', onChange);\n    };\n  }, []);\n  return dimensions;\n}\n\nexports.useDimensions = useDimensions;","map":{"version":3,"sources":["../src/useDimensions.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAGA,SAAgB,aAAhB,GAA6B;AACrB,MAAA,EAAA,GAA8B,OAAA,CAAA,QAAA,CAAS;AAC3C,IAAA,MAAM,EAAE,cAAA,CAAA,UAAA,CAAW,GAAX,CAAe,QAAf,CADmC;AAE3C,IAAA,MAAM,EAAE,cAAA,CAAA,UAAA,CAAW,GAAX,CAAe,QAAf;AAFmC,GAAT,CAA9B;AAAA,MAAC,UAAU,GAAA,EAAA,CAAA,CAAA,CAAX;AAAA,MAAa,aAAa,GAAA,EAAA,CAAA,CAAA,CAA1B;;AAKN,MAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,EAAD,EAMhB;QALC,MAAM,GAAA,EAAA,CAAA,M;QACN,MAAM,GAAA,EAAA,CAAA,M;AAKN,IAAA,aAAa,CAAC;AAAC,MAAA,MAAM,EAAA,MAAP;AAAS,MAAA,MAAM,EAAA;AAAf,KAAD,CAAb;AACD,GARD;;AAUA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,IAAA,cAAA,CAAA,UAAA,CAAW,gBAAX,CAA4B,QAA5B,EAAsC,QAAtC;AAEA,WAAO,YAAA;AAAM,aAAA,cAAA,CAAA,UAAA,CAAW,mBAAX,CAA+B,QAA/B,EAAA,QAAA,CAAA;AAAkD,KAA/D;AACD,GAJD,EAIG,EAJH;AAMA,SAAO,UAAP;AACD;;AAvBD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDimensions = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nfunction useDimensions() {\n    var _a = react_1.useState({\n        window: react_native_1.Dimensions.get('window'),\n        screen: react_native_1.Dimensions.get('screen'),\n    }), dimensions = _a[0], setDimensions = _a[1];\n    var onChange = function (_a) {\n        var window = _a.window, screen = _a.screen;\n        setDimensions({ window: window, screen: screen });\n    };\n    react_1.useEffect(function () {\n        react_native_1.Dimensions.addEventListener('change', onChange);\n        return function () { return react_native_1.Dimensions.removeEventListener('change', onChange); };\n    }, []);\n    return dimensions;\n}\nexports.useDimensions = useDimensions;\n//# sourceMappingURL=useDimensions.js.map"]},"metadata":{},"sourceType":"script"}