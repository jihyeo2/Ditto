{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAccessibilityInfo = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nfunction useAccessibilityStateListener(eventName, initializerName) {\n  var _a = react_1.useState(undefined),\n      isEnabled = _a[0],\n      setIsEnabled = _a[1];\n\n  react_1.useEffect(function () {\n    if (!react_native_1.AccessibilityInfo[initializerName]) {\n      return;\n    }\n\n    react_native_1.AccessibilityInfo[initializerName]().then(setIsEnabled);\n    react_native_1.AccessibilityInfo.addEventListener(eventName, setIsEnabled);\n    return function () {\n      return react_native_1.AccessibilityInfo.removeEventListener(eventName, setIsEnabled);\n    };\n  }, [eventName, initializerName]);\n  return isEnabled;\n}\n\nfunction useAccessibilityInfo() {\n  var boldTextEnabled = useAccessibilityStateListener('boldTextChanged', 'isBoldTextEnabled');\n  var grayscaleEnabled = useAccessibilityStateListener('grayscaleChanged', 'isGrayscaleEnabled');\n  var invertColorsEnabled = useAccessibilityStateListener('invertColorsChanged', 'isInvertColorsEnabled');\n  var reduceMotionEnabled = useAccessibilityStateListener('reduceMotionChanged', 'isReduceMotionEnabled');\n  var reduceTransparencyEnabled = useAccessibilityStateListener('reduceTransparencyChanged', 'isReduceTransparencyEnabled');\n  var screenReaderEnabled = useAccessibilityStateListener('screenReaderChanged', 'isScreenReaderEnabled');\n  return {\n    screenReaderEnabled: screenReaderEnabled,\n    grayscaleEnabled: grayscaleEnabled,\n    invertColorsEnabled: invertColorsEnabled,\n    reduceMotionEnabled: reduceMotionEnabled,\n    reduceTransparencyEnabled: reduceTransparencyEnabled,\n    boldTextEnabled: boldTextEnabled\n  };\n}\n\nexports.useAccessibilityInfo = useAccessibilityInfo;","map":{"version":3,"sources":["../src/useAccessibilityInfo.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAWA,SAAS,6BAAT,CACE,SADF,EAEE,eAFF,EAEsD;AAE9C,MAAA,EAAA,GAA4B,OAAA,CAAA,QAAA,CAA8B,SAA9B,CAA5B;AAAA,MAAC,SAAS,GAAA,EAAA,CAAA,CAAA,CAAV;AAAA,MAAY,YAAY,GAAA,EAAA,CAAA,CAAA,CAAxB;;AAEN,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,QAAI,CAAC,cAAA,CAAA,iBAAA,CAAkB,eAAlB,CAAL,EAAyC;AACvC;AACD;;AAED,IAAA,cAAA,CAAA,iBAAA,CAAkB,eAAlB,IAAqC,IAArC,CAA0C,YAA1C;AACA,IAAA,cAAA,CAAA,iBAAA,CAAkB,gBAAlB,CAAmC,SAAnC,EAA8C,YAA9C;AAEA,WAAO,YAAA;AAAM,aAAA,cAAA,CAAA,iBAAA,CAAkB,mBAAlB,CAAsC,SAAtC,EAAA,YAAA,CAAA;AAA8D,KAA3E;AACD,GATD,EASG,CAAC,SAAD,EAAY,eAAZ,CATH;AAWA,SAAO,SAAP;AACD;;AAED,SAAgB,oBAAhB,GAAoC;AAClC,MAAM,eAAe,GAAG,6BAA6B,CACnD,iBADmD,EAEnD,mBAFmD,CAArD;AAIA,MAAM,gBAAgB,GAAG,6BAA6B,CACpD,kBADoD,EAEpD,oBAFoD,CAAtD;AAIA,MAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBADuD,EAEvD,uBAFuD,CAAzD;AAIA,MAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBADuD,EAEvD,uBAFuD,CAAzD;AAIA,MAAM,yBAAyB,GAAG,6BAA6B,CAC7D,2BAD6D,EAE7D,6BAF6D,CAA/D;AAIA,MAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBADuD,EAEvD,uBAFuD,CAAzD;AAKA,SAAO;AACL,IAAA,mBAAmB,EAAA,mBADd;AAEL,IAAA,gBAAgB,EAAA,gBAFX;AAGL,IAAA,mBAAmB,EAAA,mBAHd;AAIL,IAAA,mBAAmB,EAAA,mBAJd;AAKL,IAAA,yBAAyB,EAAA,yBALpB;AAML,IAAA,eAAe,EAAA;AANV,GAAP;AAQD;;AAlCD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAccessibilityInfo = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nfunction useAccessibilityStateListener(eventName, initializerName) {\n    var _a = react_1.useState(undefined), isEnabled = _a[0], setIsEnabled = _a[1];\n    react_1.useEffect(function () {\n        if (!react_native_1.AccessibilityInfo[initializerName]) {\n            return;\n        }\n        react_native_1.AccessibilityInfo[initializerName]().then(setIsEnabled);\n        react_native_1.AccessibilityInfo.addEventListener(eventName, setIsEnabled);\n        return function () { return react_native_1.AccessibilityInfo.removeEventListener(eventName, setIsEnabled); };\n    }, [eventName, initializerName]);\n    return isEnabled;\n}\nfunction useAccessibilityInfo() {\n    var boldTextEnabled = useAccessibilityStateListener('boldTextChanged', 'isBoldTextEnabled');\n    var grayscaleEnabled = useAccessibilityStateListener('grayscaleChanged', 'isGrayscaleEnabled');\n    var invertColorsEnabled = useAccessibilityStateListener('invertColorsChanged', 'isInvertColorsEnabled');\n    var reduceMotionEnabled = useAccessibilityStateListener('reduceMotionChanged', 'isReduceMotionEnabled');\n    var reduceTransparencyEnabled = useAccessibilityStateListener('reduceTransparencyChanged', 'isReduceTransparencyEnabled');\n    var screenReaderEnabled = useAccessibilityStateListener('screenReaderChanged', 'isScreenReaderEnabled');\n    return {\n        screenReaderEnabled: screenReaderEnabled,\n        grayscaleEnabled: grayscaleEnabled,\n        invertColorsEnabled: invertColorsEnabled,\n        reduceMotionEnabled: reduceMotionEnabled,\n        reduceTransparencyEnabled: reduceTransparencyEnabled,\n        boldTextEnabled: boldTextEnabled,\n    };\n}\nexports.useAccessibilityInfo = useAccessibilityInfo;\n//# sourceMappingURL=useAccessibilityInfo.js.map"]},"metadata":{},"sourceType":"script"}